#!/bin/bash

APP_DIR=$(dirname $(dirname $0))
TEMPLATE=$APP_DIR/template

if [ $# -eq 0 ]; then
	echo "Usage: $(basename $0) <config file>"
	exit 1
fi

CONFIG=$1
. $CONFIG

if [ -z "$TARGET_DIR" ] 
then
	echo 'empty $TARGET_DIR' 
	exit 1
fi

if [ -z "$SITE_ID" ]
then
	echo 'empty $SITE_ID'
	exit 1
fi

if [ -z "$LAB_ID" ]
then
	echo 'empty $LAB_ID'
	exit 1
fi

: ${LIMS2_DIR:="$TARGET_DIR/lims2"}
: ${LAB_DIR:="$TARGET_DIR/lib"}
: ${MYSQL_DIR:="$TARGET_DIR/mysql"}
: ${SPHINX_DIR:="$TARGET_DIR/sphinxsearch"}

: ${LOG_DIR:="$TARGET_DIR/logs"}
: ${CONFIG_DIR:="$TARGET_DIR/config"}

: ${NGINX_CONFIG_DIR:="$CONFIG_DIR/sites"}
: ${NGINX_LOG_DIR:="$LOG_DIR/nginx"}

: ${SPHINX_CONFIG_DIR:="$CONFIG_DIR/sphinxsearch"}
: ${SPHINX_LOG_DIR:="$LOG_DIR/sphinxsearch"}

: ${MYSQL_CONFIG_DIR:="$CONFIG_DIR/mysql"}
: ${MYSQL_LOG_DIR:="$LOG_DIR/mysql"}

: ${NODE_LIMS2_DIR:="$TARGET_DIR/node-lims2"}
: ${NODE_LIMS2_LOG_DIR:="$LOG_DIR/node-lims2"}

: ${GLOGON_SERVER_DIR:="$TARGET_DIR/glogon-server"}

# The following variables will be used in `lims2` container.  Export them here.
export SITE_ID LAB_ID

if [ ! -d $TARGET_DIR ] 
then
	mkdir -p $(dirname $TARGET_DIR)
	cp -r $TEMPLATE $TARGET_DIR
	sed -i 's/$SITE_ID/'$SITE_ID'/g' $TARGET_DIR/config/sites/lims2
	sed -i 's/$LAB_ID/'$LAB_ID'/g' $TARGET_DIR/config/sites/lims2
	sed -i 's/$SITE_ID/'$SITE_ID'/g' $TARGET_DIR/config/sphinxsearch/conf.d/lims2.conf
	sed -i 's/$LAB_ID/'$LAB_ID'/g' $TARGET_DIR/config/sphinxsearch/conf.d/lims2.conf
fi

CONTAINER_NAME=lims2-$SITE_ID-$LAB_ID

if [ "$ENABLE_SPHINX" == '1' ] 
then
	docker run --name $CONTAINER_NAME-sphinx -v /dev/log:/dev/log -v $TARGET_DIR:/data --privileged \
	    -v $SPHINX_DIR:/var/lib/sphinxsearch \
	    -v $SPHINX_CONFIG_DIR:/etc/sphinxsearch \
	    -v $SPHINX_LOG_DIR:/var/log/sphinxsearch \
	    -d iamfat/sphinxsearch
fi

if [ "$ENABLE_MYSQL" == '1' ] 
then
	MYSQL_CONTAINER_NAME=$CONTAINER_NAME-mysql
	docker run --name $MYSQL_CONTAINER_NAME -v /dev/log:/dev/log -v $TARGET_DIR:/data --privileged \
	    -v $MYSQL_DIR:/var/lib/mysql \
	    -v $MYSQL_CONFIG_DIR:/etc/mysql \
	    -v $MYSQL_LOG_DIR:/var/log/mysql \
	    -d iamfat/mysql
	if [ -n "$BACKUP_FILE" ]; then
		mysql_ip=$(docker inspect -f '{{ .NetworkSettings.IPAddress }}' $MYSQL_CONTAINER_NAME)
		while ! mysql -h ${mysql_ip} -e 'quit' 2>/dev/null ; do
			sleep 1
		done
		DB_NAME=lims2_${LAB_ID}
		mysql -h ${mysql_ip} -e "CREATE DATABASE IF NOT EXISTS ${DB_NAME}"
		if expr "$BACKUP_FILE" : "[a-zA-Z0-9+.-]\+:" >/dev/null 2>&1; then
			curl --insecure ${BACKUP_FILE}
		else
			cat ${BACKUP_FILE}
		fi | tar x -z -f - -O | mysql -h ${mysql_ip} ${DB_NAME}
		mysql -h ${mysql_ip} -e "UPDATE ${DB_NAME}._auth SET password = md5('83719730') WHERE token = 'genee'"
	fi
fi

: ${BACKUP_LAB_DIR:=${LIMS2_DIR}/sites/${SITE_ID}/labs/${LAB_ID}}
BACKUP_LAB_DIR=${BACKUP_LAB_DIR%%/}
[ -e ${LAB_DIR} ] || rsync -azKs "${BACKUP_LAB_DIR}/" "${LAB_DIR}"

export DOCKER_LIMS2_DIR=/usr/local/share/lims2
export DOCKER_LAB_DIR=/var/lib/lims2/sites/${SITE_ID}/labs/${LAB_ID}
export DOCKER_CACHE_DIR=/var/cache/lims2
export DOCKER_NODE_LIMS2_DIR=/home/genee/node-lims2
export DOCKER_NODE_LIMS2_LOG_DIR=/var/log/node-lims2
export DOCKER_GLOGON_SERVER_DIR=/home/genee/glogon-server

docker_cmd="docker run --name $CONTAINER_NAME -v /dev/log:/dev/log -v $TARGET_DIR:/data --privileged"
docker_cmd="$docker_cmd -v $NGINX_CONFIG_DIR:/etc/nginx/sites-enabled"
docker_cmd="$docker_cmd -v $NGINX_LOG_DIR:/var/log/nginx"
docker_cmd="$docker_cmd -v $LIMS2_DIR:${DOCKER_LIMS2_DIR}"
docker_cmd="$docker_cmd -v $LAB_DIR:${DOCKER_LAB_DIR}"
docker_cmd="$docker_cmd -v ${NODE_LIMS2_DIR}:${DOCKER_NODE_LIMS2_DIR}"
docker_cmd="$docker_cmd -v ${NODE_LIMS2_LOG_DIR}:${DOCKER_NODE_LIMS2_LOG_DIR}"
docker_cmd="$docker_cmd -v ${GLOGON_SERVER_DIR}:${DOCKER_GLOGON_SERVER_DIR}"
docker_cmd="$docker_cmd -e SITE_ID -e LAB_ID"
docker_cmd="$docker_cmd -e LIMS2_DIR=${DOCKER_LIMS2_DIR}"
docker_cmd="$docker_cmd -e LAB_DIR=${DOCKER_LAB_DIR}"
docker_cmd="$docker_cmd -e CACHE_DIR=${DOCKER_CACHE_DIR}"
docker_cmd="$docker_cmd -e NODE_LIMS2_DIR=${DOCKER_NODE_LIMS2_DIR}"
docker_cmd="$docker_cmd -e NODE_LIMS2_LOG_DIR=${DOCKER_NODE_LIMS2_LOG_DIR}"
docker_cmd="$docker_cmd -e GLOGON_SERVER_DIR=${DOCKER_GLOGON_SERVER_DIR}"
[ -z "$MYSQL_CONTAINER_NAME" ] || docker_cmd="$docker_cmd --link $MYSQL_CONTAINER_NAME:db"
docker_cmd="$docker_cmd -p 80 -d iamfat/lims2"
eval $docker_cmd
